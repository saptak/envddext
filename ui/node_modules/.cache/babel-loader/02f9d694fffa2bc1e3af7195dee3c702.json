{"ast":null,"code":"export const DockerDesktop=\"docker-desktop\";export const CurrentExtensionContext=\"currentExtensionContext\";export const IsK8sEnabled=\"isK8sEnabled\";export const listHostContexts=async ddClient=>{var _ddClient$extension$h;const output=await((_ddClient$extension$h=ddClient.extension.host)===null||_ddClient$extension$h===void 0?void 0:_ddClient$extension$h.cli.exec(\"kubectl\",[\"config\",\"view\",\"-o\",\"jsonpath='{.contexts}'\"]));console.log(output);if(output!==null&&output!==void 0&&output.stderr){console.log(output.stderr);return output.stderr;}return output===null||output===void 0?void 0:output.stdout;};export const setDockerDesktopContext=async ddClient=>{var _ddClient$extension$h2;const output=await((_ddClient$extension$h2=ddClient.extension.host)===null||_ddClient$extension$h2===void 0?void 0:_ddClient$extension$h2.cli.exec(\"kubectl\",[\"config\",\"use-context\",\"docker-desktop\"]));console.log(output);if(output!==null&&output!==void 0&&output.stderr){return output.stderr;}return output===null||output===void 0?void 0:output.stdout;};export const getCurrentHostContext=async ddClient=>{var _ddClient$extension$h3;const output=await((_ddClient$extension$h3=ddClient.extension.host)===null||_ddClient$extension$h3===void 0?void 0:_ddClient$extension$h3.cli.exec(\"kubectl\",[\"config\",\"view\",\"-o\",\"jsonpath='{.current-context}'\"]));console.log(output);if(output!==null&&output!==void 0&&output.stderr){return output.stderr;}return output===null||output===void 0?void 0:output.stdout;};export const checkK8sConnection=async ddClient=>{try{var _ddClient$extension$h4;let output=await((_ddClient$extension$h4=ddClient.extension.host)===null||_ddClient$extension$h4===void 0?void 0:_ddClient$extension$h4.cli.exec(\"kubectl\",[\"cluster-info\",\"--request-timeout\",\"2s\"]));console.log(output);if(output!==null&&output!==void 0&&output.stderr){console.log(output.stderr);return\"false\";}return\"true\";}catch(e){console.log(\"[checkK8sConnection] error : \",e);return\"false\";}};export const listNamespaces=async ddClient=>{var _ddClient$extension$h5;const output=await((_ddClient$extension$h5=ddClient.extension.host)===null||_ddClient$extension$h5===void 0?void 0:_ddClient$extension$h5.cli.exec(\"kubectl\",[\"get\",\"namespaces\",\"--no-headers\",\"-o\",'custom-columns=\":metadata.name\"',\"--context\",\"docker-desktop\"]));console.log(output);if(output!==null&&output!==void 0&&output.stderr){return output.stderr;}return output===null||output===void 0?void 0:output.stdout;};export const listEnvoyGateways=async ddClient=>{var _ddClient$extension$h6;const output=await((_ddClient$extension$h6=ddClient.extension.host)===null||_ddClient$extension$h6===void 0?void 0:_ddClient$extension$h6.cli.exec(\"kubectl\",[\"get\",\"gateways.gateway.envoyproxy.io\",\"-A\",\"-o\",\"json\"]));if(output!==null&&output!==void 0&&output.stderr){return{error:output.stderr};}try{return JSON.parse((output===null||output===void 0?void 0:output.stdout)||'{}');}catch(e){return{error:'Failed to parse gateways JSON'};}};export const listEnvoyHTTPRoutes=async ddClient=>{var _ddClient$extension$h7;const output=await((_ddClient$extension$h7=ddClient.extension.host)===null||_ddClient$extension$h7===void 0?void 0:_ddClient$extension$h7.cli.exec(\"kubectl\",[\"get\",\"httproutes.gateway.envoyproxy.io\",\"-A\",\"-o\",\"json\"]));if(output!==null&&output!==void 0&&output.stderr){return{error:output.stderr};}try{return JSON.parse((output===null||output===void 0?void 0:output.stdout)||'{}');}catch(e){return{error:'Failed to parse httproutes JSON'};}};","map":{"version":3,"names":["DockerDesktop","CurrentExtensionContext","IsK8sEnabled","listHostContexts","ddClient","_ddClient$extension$h","output","extension","host","cli","exec","console","log","stderr","stdout","setDockerDesktopContext","_ddClient$extension$h2","getCurrentHostContext","_ddClient$extension$h3","checkK8sConnection","_ddClient$extension$h4","e","listNamespaces","_ddClient$extension$h5","listEnvoyGateways","_ddClient$extension$h6","error","JSON","parse","listEnvoyHTTPRoutes","_ddClient$extension$h7"],"sources":["/Users/saptak/code/envddext/ui/src/helper/kubernetes.ts"],"sourcesContent":["import { v1 } from \"@docker/extension-api-client-types\";\n\nexport const DockerDesktop = \"docker-desktop\";\nexport const CurrentExtensionContext = \"currentExtensionContext\";\nexport const IsK8sEnabled = \"isK8sEnabled\";\n\nexport const listHostContexts = async (ddClient: v1.DockerDesktopClient) => {\n  const output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n    \"config\",\n    \"view\",\n    \"-o\",\n    \"jsonpath='{.contexts}'\",\n  ]);\n  console.log(output);\n  if (output?.stderr) {\n    console.log(output.stderr);\n    return output.stderr;\n  }\n\n  return output?.stdout;\n};\n\nexport const setDockerDesktopContext = async (\n  ddClient: v1.DockerDesktopClient\n) => {\n  const output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n    \"config\",\n    \"use-context\",\n    \"docker-desktop\",\n  ]);\n  console.log(output);\n  if (output?.stderr) {\n    return output.stderr;\n  }\n  return output?.stdout;\n};\n\nexport const getCurrentHostContext = async (\n  ddClient: v1.DockerDesktopClient\n) => {\n  const output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n    \"config\",\n    \"view\",\n    \"-o\",\n    \"jsonpath='{.current-context}'\",\n  ]);\n  console.log(output);\n  if (output?.stderr) {\n    return output.stderr;\n  }\n  return output?.stdout;\n};\n\nexport const checkK8sConnection = async (ddClient: v1.DockerDesktopClient) => {\n  try {\n    let output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n      \"cluster-info\",\n      \"--request-timeout\",\n      \"2s\",\n    ]);\n    console.log(output);\n    if (output?.stderr) {\n      console.log(output.stderr);\n      return \"false\";\n    }\n    return \"true\";\n  } catch (e: any) {\n    console.log(\"[checkK8sConnection] error : \", e);\n    return \"false\";\n  }\n};\n\nexport const listNamespaces = async (ddClient: v1.DockerDesktopClient) => {\n  const output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n    \"get\",\n    \"namespaces\",\n    \"--no-headers\",\n    \"-o\",\n    'custom-columns=\":metadata.name\"',\n    \"--context\",\n    \"docker-desktop\",\n  ]);\n  console.log(output);\n  if (output?.stderr) {\n    return output.stderr;\n  }\n  return output?.stdout;\n};\n\nexport const listEnvoyGateways = async (ddClient: v1.DockerDesktopClient) => {\n  const output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n    \"get\",\n    \"gateways.gateway.envoyproxy.io\",\n    \"-A\",\n    \"-o\",\n    \"json\"\n  ]);\n  if (output?.stderr) {\n    return { error: output.stderr };\n  }\n  try {\n    return JSON.parse(output?.stdout || '{}');\n  } catch (e) {\n    return { error: 'Failed to parse gateways JSON' };\n  }\n};\n\nexport const listEnvoyHTTPRoutes = async (ddClient: v1.DockerDesktopClient) => {\n  const output = await ddClient.extension.host?.cli.exec(\"kubectl\", [\n    \"get\",\n    \"httproutes.gateway.envoyproxy.io\",\n    \"-A\",\n    \"-o\",\n    \"json\"\n  ]);\n  if (output?.stderr) {\n    return { error: output.stderr };\n  }\n  try {\n    return JSON.parse(output?.stdout || '{}');\n  } catch (e) {\n    return { error: 'Failed to parse httproutes JSON' };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}